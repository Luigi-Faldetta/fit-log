// AIWorkoutGeneratorPage.jsx
import React, { useState } from 'react';
import WorkoutModal from '../../components/WorkoutModal/WorkoutModal';
import AIWorkoutForm from '../../components/AIWorkoutForm/AIWorkoutForm';
import WorkoutGeneratorControls from '../../components/WorkoutGeneratorControls/WorkoutGeneratorControls';
import { postWorkout, postExercise } from '../../services/apiService';
import './AIWorkoutGeneratorPage.css';

const AIWorkoutGenerator = () => {
  const [age, setAge] = useState('');
  const [experienceLevel, setExperienceLevel] = useState('');
  const [goal, setGoal] = useState('');
  const [duration, setDuration] = useState('');
  const [request, setRequest] = useState('');
  const [workout, setWorkout] = useState(null);
  const [showModal, setShowModal] = useState(false);

  // Function to generate a workout based on user input
  const generateWorkout = async () => {
    try {
      const response = await fetch(
        'http://localhost:3000/ai/generate-workout',
        {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            age,
            experienceLevel,
            goal,
            duration,
            request,
          }),
        }
      );

      const data = await response.json();

      const generatedWorkout = data.workout;

      setWorkout({
        name: 'AI-Generated Workout',
        description: 'Workout generated by AI',
        exercises: parseWorkoutText(generatedWorkout),
      });

      setShowModal(true);
    } catch (error) {
      console.error('Error generating workout:', error);
    }
  };

  const parseWorkoutText = (text) => {
    // Parse logic here (reuse your existing code)
    return {
      name: 'AI Generated Workout',
      description: 'Workout generated for your goals.',
      exercises: [], // For simplicity, this example does not implement the actual parsing
    };
  };

  const saveWorkout = async () => {
    try {
      const createdWorkout = await postWorkout({
        name: workout.name,
        description: workout.description,
      });

      const workoutId = createdWorkout.workout_id;
      const exercisePromises = workout.exercises.exercises.map((exercise) =>
        postExercise({
          name: exercise.name,
          description: exercise.notes,
          muscle_group: 'abs',
          weight: exercise.kg,
          sets: exercise.sets,
          reps: exercise.reps,
          rest: 2,
          media_URL: exercise.video,
          workout_id: workoutId,
        })
      );

      await Promise.all(exercisePromises);
      console.log('AI-generated workout and exercises saved successfully');
    } catch (error) {
      console.error('Error saving AI-generated workout and exercises:', error);
    }
  };

  const closeModal = () => {
    setShowModal(false);
  };

  const regenerateWorkout = () => {
    generateWorkout();
  };

  return (
    <div className="ai-workout-generator-container">
      <AIWorkoutForm
        age={age}
        experienceLevel={experienceLevel}
        goal={goal}
        duration={duration}
        request={request}
        onAgeChange={(e) => setAge(e.target.value)}
        onExperienceChange={(e) => setExperienceLevel(e.target.value)}
        onGoalChange={(e) => setGoal(e.target.value)}
        onDurationChange={(e) => setDuration(e.target.value)}
        onRequestChange={(e) => setRequest(e.target.value)}
      />
      <WorkoutGeneratorControls onGenerateWorkout={generateWorkout} />
      {showModal && (
        <WorkoutModal
          workout={workout}
          onRegenerate={regenerateWorkout}
          onSave={saveWorkout}
          onClose={closeModal}
        />
      )}
    </div>
  );
};

export default AIWorkoutGenerator;
